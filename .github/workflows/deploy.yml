name: Deploy Application

on:
  push:
    branches: [master] # 当代码推送到master分支时触发

jobs:
  deploy:
    runs-on: ubuntu-latest # 使用Ubuntu系统作为构建环境
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # 从GitHub拉取代码

      - name: Install Node.js
        uses: actions/setup-node@v3 # 安装Node.js环境
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci --production # 安装项目依赖包

      - name: Create oss.json
        run: |
          # 创建阿里云OSS配置文件
          cat > config/oss.json <<EOF
          { ... }
          EOF

      - name: Setup auth
        run: |
          # 创建认证配置文件
          cat > config/auth.json <<EOF
          { ... }
          EOF

      - name: Setup SSH
        run: |
          # 配置SSH密钥连接服务器
          mkdir -p ~/.ssh
          echo "${{ secrets.ALIYUN_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Verify SSH connection
        run: |
          # 测试SSH连接是否成功
          ssh -p ${{ secrets.ALIYUN_SERVER_PORT }} ${{ secrets.ALIYUN_SSH_USER }}@${{ secrets.ALIYUN_SERVER_IP }} "echo SSH连接成功"

      - name: Sync code to server
        run: |
          # 将代码同步到服务器
          rsync -avz --delete -e "ssh -p ${{ secrets.ALIYUN_SERVER_PORT }}" ./ user@server:/path

      - name: Rebuild and restart Docker containers
        run: |
          # 在服务器上重启Docker服务
          ssh -p ${{ secrets.ALIYUN_SERVER_PORT }} user@server "cd /path && docker-compose down && docker-compose up -d --build"

      - name: Health check
        run: |
          # 检查服务是否正常启动
          ssh -p ${{ secrets.ALIYUN_SERVER_PORT }} user@server "docker ps && curl -I http://服务器IP:8889"