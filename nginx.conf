events {
    worker_connections 1024;
}

http {
    # 基础安全设置（用户友好）
    client_max_body_size 50M;  # 增加到50M，支持文件上传
    client_body_timeout 60s;   # 增加超时时间
    client_header_timeout 60s;
    keepalive_timeout 75s;
    
    # 隐藏Nginx版本信息
    server_tokens off;
    
    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # SSL安全配置
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # 用户友好的限流设置
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/s;    # 登录：每秒10次
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;     # API：每秒30次  
    limit_req_zone $binary_remote_addr zone=public:10m rate=50r/s;  # 公共：每秒50次
    
    # 连接数限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # 更精确的恶意User-Agent屏蔽（减少误伤）
    map $http_user_agent $blocked_agent {
        default 0;
        # 只屏蔽明确的恶意扫描器
        ~*(maliciousbot|scanbot|nmap|sqlmap|WebBench|nikto|AhrefsBot) 1;
        # 不屏蔽常见的合法工具如wget、curl等
    }
    
    # 屏蔽恶意请求路径
    map $request_uri $blocked_uri {
        default 0;
        ~*(\.env|\.git|\.ht|config|admin|phpmyadmin|wp-admin) 1;
        ~*(union.*select|insert.*into|drop.*table|select.*from) 1;
        ~*(\.\./|\.\.%2f|\.\.%5c) 1;
    }

    upstream nestapp {
        server app:3000;
        keepalive 32;
    }

    server {
        listen 443 ssl;
        server_name api.yqqlike.xin;

        ssl_certificate /etc/nginx/ssl/api.yqqlike.xin.pem;
        ssl_certificate_key /etc/nginx/ssl/api.yqqlike.xin.key;

        # 全局连接限制
        limit_conn addr 50;  # 每个IP最多50个并发连接

        # 屏蔽恶意访问
        if ($blocked_agent = 1) {
            return 444;
        }
        
        if ($blocked_uri = 1) {
            return 444;
        }
        
        # 屏蔽非常规请求方法（保留常见方法）
        if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS|HEAD|PATCH)$) {
            return 444;
        }

        # 全局安全头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # 认证接口 - 用户友好的限流
        location /auth/ {
            limit_req zone=auth burst=15 nodelay;  # 突发15个请求
            limit_conn addr 10;  # 每个IP最多10个并发登录
            
            proxy_pass http://nestapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # 合理的超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
        }

        # 主要API接口
        location /api/ {
            limit_req zone=api burst=50 nodelay;  # 突发50个请求
            limit_conn addr 20;  # 每个IP最多20个并发
            
            proxy_pass http://nestapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
        }

        # 公共接口（如图片、文件等）
        location /public/ {
            limit_req zone=public burst=100 nodelay;  # 更宽松的限流
            limit_conn addr 30;
            
            proxy_pass http://nestapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 根路径和其他路由
        location / {
            limit_req zone=api burst=30 nodelay;
            limit_conn addr 15;
            
            proxy_pass http://nestapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # WebSocket - 宽松限制
        location /socket.io/ {
            limit_req zone=api burst=100 nodelay;
            limit_conn addr 30;
            
            proxy_pass http://nestapp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            
            proxy_read_timeout 300s;  # WebSocket需要更长时间
            proxy_send_timeout 300s;
            proxy_connect_timeout 30s;
        }

        # 健康检查 - 完全开放
        location /health {
            access_log off;
            limit_req off;
            limit_conn off;
            
            proxy_pass http://nestapp;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
        }

        # 屏蔽敏感文件（不影响正常用户）
        location ~ /\. {
            deny all;
            return 404;
            access_log off;
        }
        
        location ~* (\.env|\.git|\.htaccess|\.htpasswd|config\.php) {
            deny all;
            return 404;
            access_log off;
        }
    }

    # HTTP重定向
    server {
        listen 80;
        server_name api.yqqlike.xin;
        return 301 https://$server_name$request_uri;
    }
    
    # 默认服务器
    server {
        listen 80 default_server;
        return 444;
    }
}