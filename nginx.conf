events {
    worker_connections 1024;
}

http {
    # 基础安全设置
    client_max_body_size 10M; # 限制为10M，防止大文件攻击
    client_body_timeout 30s;
    client_header_timeout 30s;
    keepalive_timeout 30s;
    send_timeout 30s;
    reset_timedout_connection on;
    
    # 隐藏Nginx版本信息
    server_tokens off;
    
    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # SSL安全配置
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 限制请求速率
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # 连接数限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # 屏蔽恶意User-Agent
    map $http_user_agent $blocked_agent {
        default 0;
        ~*(maliciousbot|scanbot|nmap|sqlmap|wget|curl|python|java) 1;
        ~*(env|git|config|admin) 1;
    }
    
    # 屏蔽恶意请求路径
    map $request_uri $blocked_uri {
        default 0;
        ~*(\.env|\.git|\.ht|config|admin|phpmyadmin) 1;
        ~*(union.*select|insert.*into|drop.*table) 1;
    }

    upstream nestapp {
        server app:3000;
        keepalive 32;
    }

    server {
        listen 443 ssl;
        server_name api.yqqlike.xin;

        ssl_certificate /etc/nginx/ssl/api.yqqlike.xin.pem;
        ssl_certificate_key /etc/nginx/ssl/api.yqqlike.xin.key;

        # 连接数限制
        limit_conn addr 10;
        
        # 屏蔽恶意访问 - 直接返回444关闭连接
        if ($blocked_agent = 1) {
            return 444;
        }
        
        if ($blocked_uri = 1) {
            return 444;
        }
        
        # 屏蔽非常规请求方法
        if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$) {
            return 444;
        }

        # 全局安全头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;

        # API限流区域
        location /auth/ {
            # 认证接口更严格的限流
            limit_req zone=auth burst=10 nodelay;
            limit_conn addr 5;
            
            proxy_pass http://nestapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 安全代理设置
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # 普通API路由
        location /api/ {
            # API限流
            limit_req zone=api burst=20 nodelay;
            limit_conn addr 8;
            
            proxy_pass http://nestapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;
        }

        # 根路径和静态文件
        location / {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://nestapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # WebSocket安全配置
        location /socket.io/ {
            # WebSocket特殊限流
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://nestapp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 30s;
        }

        # 健康检查端点 - 不受限流
        location /health {
            access_log off;
            proxy_pass http://nestapp;
            proxy_set_header Host $host;
        }

        # 屏蔽所有敏感文件访问
        location ~ /\. {
            deny all;
            return 404;
            access_log off;
        }
        
        location ~* (\.env|\.git|\.htaccess|\.htpasswd|config\.php|composer\.json|package\.json) {
            deny all;
            return 404;
            access_log off;
        }

        # 机器人屏蔽
        location /robots.txt {
            return 200 "User-agent: *\nDisallow: /\n";
            access_log off;
        }
    }

    server {
        listen 80;
        server_name api.yqqlike.xin;
        
        # HTTP强制跳转HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        return 301 https://$server_name$request_uri;
    }
    
    # 默认服务器块，屏蔽所有未知域名访问
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        ssl_certificate /etc/nginx/ssl/dummy.crt;
        ssl_certificate_key /etc/nginx/ssl/dummy.key;
        return 444;
    }
}